<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ResumeMapper">

	<cache />
	<sql id="baseResume">
	RESUME_NUM, USER_ID, RESUME_FILE, RESUME_NATIONAL, RESUME_BOHUN, RESUME_DISORDER, RESUME_ARMY,
	RESUME_HIGHSCHOOL, RESUME_UNIVERCITY, RESUME_SCHOOL_START1, RESUME_SCHOOL_END1, RESUME_SCHOOL_START2, 
	RESUME_SCHOOL_END2, RESUME_MAJOR, RESUME_GRADE_POINT, RESUME_EXP_OVER,
	RESUME_LANGUAGE, RESUME_LANGUAGE_GRADE, RESUME_LICENSE, RESUME_FORMER_WORK, RESUME_FORMER_POSITION,
	RESUME_FORMER_START, RESUME_FORMER_END, RESUME_FORMER_SALARY, RESUME_FORMER_TASK, RESUME_FORMER_INTRO,
	RESUME_GROW, RESUME_GOOD, RESUME_BAD, RESUME_PER_INFO
	</sql>
	<sql id="baseUser">
	USER_ID, USER_PW, USER_EMAIL, USER_PH, USER_ADDR, USER_NAME, USER_BIRTH, USER_GENDER
	</sql>
	
	
	<resultMap type="resumeDTO" id="baseResumeMap">
	<id column="RESUME_NUM" jdbcType="BIGINT" property="resumeNum" />
	<result column="USER_ID" jdbcType="VARCHAR" property="userId" />
	<result column="RESUME_FILE" jdbcType="VARCHAR" property="resumeFile" />
	<result column="RESUME_NATIONAL" jdbcType="VARCHAR" property="resumeNational" />
	<result column="RESUME_BOHUN" jdbcType="VARCHAR" property="resumeBohun"/>
	<result column="RESUME_DISORDER" jdbcType="VARCHAR" property="resumeDisorder"/>
	<result column="RESUME_ARMY" jdbcType="VARCHAR" property="resumeArmy"/>
	<result column="RESUME_HIGHSCHOOL" jdbcType="VARCHAR" property="resumeHighschool"/>
	<result column="RESUME_UNIVERCITY" jdbcType="VARCHAR" property="resumeUnivercity"/>
	<result column="RESUME_SCHOOL_START1" jdbcType="DATE" property="schoolStart1"/>
	<result column="RESUME_SCHOOL_END1" jdbcType="DATE" property="schoolEnd1"/>
	<result column="RESUME_SCHOOL_START2" jdbcType="DATE" property="schoolStart2"/>
	<result column="RESUME_SCHOOL_END2" jdbcType="DATE" property="schoolEnd2"/>
	<result column="RESUME_MAJOR" jdbcType="VARCHAR" property="resumeMajor"/>
	<result column="RESUME_GRADE_POINT" jdbcType="DOUBLE" property="resumePoint"/>
	<result column="RESUME_EXP_OVER" jdbcType="VARCHAR" property="resumeExpOver"/>
	<result column="RESUME_LANGUAGE" jdbcType="VARCHAR" property="resumeLanguage" />
	<result column="RESUME_LANGUAGE_GRADE" jdbcType="VARCHAR" property="resumeGrade" />
	<result column="RESUME_LICENSE" jdbcType="VARCHAR" property="resumeLicense" />
	<result column="RESUME_FORMER_WORK" jdbcType="VARCHAR" property="formerWork" />
	<result column="RESUME_FORMER_POSITION" jdbcType="VARCHAR" property="formerPosition" />
	<result column="RESUME_FORMER_START" jdbcType="DATE" property="formerStart" />
	<result column="RESUME_FORMER_END" jdbcType="DATE" property="formerEnd" />
	<result column="RESUME_FORMER_SALARY" jdbcType="BIGINT" property="formerSalary" />
	<result column="RESUME_FORMER_TASK" jdbcType="VARCHAR" property="formerTask" />
	<result column="RESUME_FORMER_INTRO" jdbcType="VARCHAR" property="formerIntro" />
	<result column="RESUME_GROW" jdbcType="VARCHAR" property="resumeGrow" />
	<result column="RESUME_GOOD" jdbcType="VARCHAR" property="resumeGood" />
	<result column="RESUME_BAD" jdbcType="VARCHAR" property="resumeBad" />
	<result column="RESUME_PER_INFO" jdbcType="VARCHAR" property="resumePerInfo"/>
	</resultMap>
	
	
    <!-- 이력서1 -->
	<insert id="insertResume1" parameterType="resumeDTO">
	insert into resume (
	RESUME_NUM, USER_ID, RESUME_FILE, RESUME_NATIONAL, RESUME_BOHUN, RESUME_DISORDER, RESUME_ARMY,
	RESUME_HIGHSCHOOL, RESUME_UNIVERCITY, RESUME_SCHOOL_START1, RESUME_SCHOOL_END1, RESUME_SCHOOL_START2, 
	RESUME_SCHOOL_END2, RESUME_MAJOR, RESUME_GRADE_POINT
	)
	values(insa_seq.nextval, #{userId}, #{resumeFile}, #{resumeNational}, #{resumeBohun}, #{resumeDisorder},
	#{resumeArmy}, #{resumeHighschool}, #{resumeUnivercity}, #{schoolStart1}, #{schoolEnd1},
	 #{schoolStart2}, #{schoolEnd2}, #{resumeMajor}, #{resumePoint})
	</insert>
	
	<!-- 이력서2 -->
	<insert id="insertResume2" parameterType="resumeDTO">
	insert into resume(
	RESUME_EXP_OVER,RESUME_LANGUAGE, RESUME_LANGUAGE_GRADE, RESUME_LICENSE, RESUME_FORMER_WORK, RESUME_FORMER_POSITION,
	RESUME_FORMER_START, RESUME_FORMER_END, RESUME_FORMER_SALARY, RESUME_FORMER_TASK, RESUME_FORMER_INTRO
	)
	value( #{resumeExpOver},#{resumeLanguage}, #{resumeGrade}, #{resumeLicense}, #{formerWork}, 
	#{formerPosition}, #{formerStart}, #{formerEnd}, #{formerSalary}, #{formerTask}, #{formerIntro})
	</insert>
	
	<resultMap type="Model.InsaDTO.ApplicantDTO" id="applicantMap">
		<id column="RESUME_NUM" jdbcType="BIGINT" property="resumeDTO.resumeNum" />
		<id column="USER_ID" jdbcType="VARCHAR" property="userDTO.userId" />
		<result column="USER_NAME" jdbcType="VARCHAR" property="userDTO.userName"/>
		<result column="USER_PW" jdbcType="VARCHAR" property="userDTO.userPw" />
		<result column="USER_EMAIL" jdbcType="VARCHAR" property="userDTO.userEmail" />
		<result column="USER_PH" jdbcType="VARCHAR" property="userDTO.userPh" />
		<result column="USER_ADDR" jdbcType="VARCHAR" property="userDTO.userAddr" />
		<result column="USER_BIRTH" jdbcType="DATE" property="userDTO.userBirth" />
		<result column="USER_GENDER" jdbcType="CHAR" property="userDTO.userGender" />
	</resultMap>
	<!-- 이력서 목록 출력 -->
	<select id="resumeAllSelect" parameterType="string" resultMap="applicantMap">
	select
	RESUME_NUM,
	u.USER_ID USER_ID, USER_PW, USER_EMAIL, USER_PH, USER_ADDR, USER_NAME, USER_BIRTH, USER_GENDER
	from resume r, kortory_user u
	<where>
	r.user_id = u.user_id
	</where>
	</select>

	<!-- 이력서 상세보기 -->
	<select id="resumeDetail" resultMap="baseResumeMap" parameterType="Integer">
	select
	<include refid="baseResume" />
	from resume
	where RESUME_NUM = #{resumeNum}
	</select>
	
	<!-- 회원 아이디 찾기 -->
	<select id="findMemberId" parameterType="Integer" resultType="String">
	select user_id
	from resume
	where resume_num = #{resumeNum}
	</select>
	
	<select id="findMemberEmail" parameterType="Model.UserDTO.UserDTO" resultType="String">
	select user_email
	from kortory_user
	where user_id = #{userId}
	</select>
	
	</mapper>
